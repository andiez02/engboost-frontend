import React, { useRef, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import {
  Box,
  Container,
  Typography,
  Button,
  Grid,
  Paper,
  Avatar,
  TextField,
  useTheme,
  Card,
  CardContent,
  Chip,
  IconButton,
  alpha,
} from '@mui/material';
import {
  Chat as ChatIcon,
  School as SchoolIcon,
  Translate as TranslateIcon,
  Psychology as PsychologyIcon,
  SportsKabaddi as PracticeIcon,
  SmartToy as SmartToyIcon,
  Person as PersonIcon,
  Send as SendIcon,
  KeyboardArrowDown as ScrollIcon,
} from '@mui/icons-material';
import Header from '../../components/Layout/Header';
import Footer from '../../components/Layout/Footer';
import Lottie from 'lottie-react';
import chatbotAnimation from '../../assets/lotties/chatbot-animation.json';
import { routes } from '../../utils/constants';

const ChatbotIntro = () => {
  const navigate = useNavigate();
  const theme = useTheme();
  const chatContainerRef = useRef(null);
  const featureSectionRef = useRef(null);

  const handleStartChat = () => {
    navigate(routes.CHATBOT);
  };

  const scrollToFeatures = () => {
    featureSectionRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  const sampleConversation = [
    {
      role: 'user',
      content: 'What\'s the difference between "affect" and "effect"?',
    },
    {
      role: 'assistant',
      content:
        'Great question! üëç\n\n"Affect" is usually a verb meaning "to influence": The weather affects my mood.\n\n"Effect" is typically a noun meaning "result": The medicine had a positive effect.\n\nRemember: A for Action (Affect = Verb), E for End result (Effect = Noun).',
    },
  ];

  // Lottie animation options
  const chatbotAnimationOptions = {
    loop: true,
    autoplay: true,
    animationData: chatbotAnimation,
    rendererSettings: {
      preserveAspectRatio: 'xMidYMid slice',
    },
  };

  return (
    <Box sx={{ bgcolor: '#fafafa', minHeight: '100vh' }}>
      <Header />

      {/* Hero Section */}
      <Box
        sx={{
          background: `linear-gradient(135deg, ${theme.palette.primary.main} 0%, ${theme.palette.primary.dark} 100%)`,
          color: 'white',
          pt: 12,
          pb: 8,
          position: 'relative',
          overflow: 'hidden',
        }}
      >
        {/* Background pattern */}
        <Box
          sx={{
            position: 'absolute',
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
            opacity: 0.1,
            backgroundImage:
              'radial-gradient(circle, #ffffff 1px, transparent 1px)',
            backgroundSize: '20px 20px',
          }}
        />

        <Container maxWidth="lg">
          <Grid container spacing={5} alignItems="center">
            <Grid item xs={12} md={6}>
              <Chip
                label="AI-Powered Learning"
                sx={{
                  mb: 2,
                  bgcolor: 'rgba(255,255,255,0.2)',
                  color: 'white',
                  fontWeight: 500,
                  '& .MuiChip-label': { px: 2 },
                }}
              />

              <Typography
                variant="h2"
                component="h1"
                fontWeight="bold"
                sx={{ mb: 2 }}
              >
                H·ªçc ti·∫øng Anh th√¥ng minh v·ªõi EngBoost AI
              </Typography>

              <Typography
                variant="h6"
                sx={{ mb: 4, opacity: 0.9, fontWeight: 'normal' }}
              >
                Tr·ª£ l√Ω AI th√¥ng minh gi√∫p b·∫°n n√¢ng cao k·ªπ nƒÉng ti·∫øng Anh th√¥ng
                qua c√°c cu·ªôc h·ªôi tho·∫°i t·ª± nhi√™n, gi·∫£i th√≠ch ng·ªØ ph√°p v√† t·ª´ v·ª±ng
                m·ªôt c√°ch d·ªÖ hi·ªÉu.
              </Typography>

              <Box sx={{ display: 'flex', gap: 2 }}>
                <Button
                  variant="contained"
                  onClick={handleStartChat}
                  sx={{
                    py: 1.5,
                    px: 4,
                    borderRadius: 3,
                    fontWeight: 600,
                    fontSize: '1rem',
                    bgcolor: 'white',
                    color: 'primary.main',
                    '&:hover': {
                      bgcolor: 'rgba(255,255,255,0.9)',
                    },
                    boxShadow: '0 8px 16px rgba(0,0,0,0.1)',
                  }}
                >
                  B·∫Øt ƒë·∫ßu tr√≤ chuy·ªán
                </Button>

                <Button
                  variant="outlined"
                  onClick={scrollToFeatures}
                  sx={{
                    py: 1.5,
                    px: 4,
                    borderRadius: 3,
                    fontWeight: 600,
                    fontSize: '1rem',
                    borderColor: 'rgba(255,255,255,0.5)',
                    color: 'white',
                    '&:hover': {
                      borderColor: 'white',
                      bgcolor: 'rgba(255,255,255,0.1)',
                    },
                  }}
                >
                  T√¨m hi·ªÉu th√™m
                </Button>
              </Box>
            </Grid>

            <Grid item xs={12} md={6} sx={{ position: 'relative' }}>
              <Paper
                elevation={6}
                sx={{
                  borderRadius: 4,
                  overflow: 'hidden',
                  height: 500,
                  display: 'flex',
                  flexDirection: 'column',
                  position: 'relative',
                  zIndex: 1,
                  boxShadow: '0 20px 40px rgba(0,0,0,0.2)',
                  transform: 'perspective(1000px) rotateY(-5deg)',
                  transition: 'transform 0.3s ease',
                  '&:hover': {
                    transform: 'perspective(1000px) rotateY(0deg)',
                  },
                }}
              >
                <Box
                  sx={{
                    p: 2,
                    bgcolor: 'primary.dark',
                    color: 'white',
                    display: 'flex',
                    alignItems: 'center',
                  }}
                >
                  <Avatar
                    sx={{ bgcolor: 'white', color: 'primary.main', mr: 2 }}
                  >
                    <SmartToyIcon />
                  </Avatar>
                  <Typography variant="subtitle1" fontWeight="medium">
                    EngBoost AI Assistant
                  </Typography>
                </Box>

                <Box
                  ref={chatContainerRef}
                  sx={{
                    flex: 1,
                    p: 2,
                    overflowY: 'auto',
                    bgcolor: '#f8f9fa',
                    display: 'flex',
                    flexDirection: 'column',
                    gap: 2,
                  }}
                >
                  <Box
                    sx={{
                      display: 'flex',
                      alignItems: 'flex-start',
                    }}
                  >
                    <Avatar
                      sx={{
                        bgcolor: 'primary.main',
                        mr: 1.5,
                        width: 36,
                        height: 36,
                      }}
                    >
                      <SmartToyIcon fontSize="small" />
                    </Avatar>
                    <Paper
                      sx={{
                        p: 2,
                        bgcolor: 'white',
                        borderRadius: '16px 16px 16px 0',
                        maxWidth: '80%',
                        boxShadow: '0 2px 8px rgba(0,0,0,0.05)',
                      }}
                    >
                      <Typography variant="body2">
                        Xin ch√†o! T√¥i l√† tr·ª£ l√Ω h·ªçc ti·∫øng Anh c·ªßa EngBoost. üëã
                        <br />
                        <br />
                        T√¥i c√≥ th·ªÉ gi√∫p b·∫°n:
                        <br />‚Ä¢ H·ªçc t·ª´ v·ª±ng m·ªõi
                        <br />‚Ä¢ Gi·∫£i th√≠ch ng·ªØ ph√°p
                        <br />‚Ä¢ D·ªãch thu·∫≠t ch√≠nh x√°c
                        <br />‚Ä¢ Luy·ªán t·∫≠p h·ªôi tho·∫°i
                      </Typography>
                    </Paper>
                  </Box>

                  {sampleConversation.map((message, index) => (
                    <Box
                      key={index}
                      sx={{
                        display: 'flex',
                        justifyContent:
                          message.role === 'user' ? 'flex-end' : 'flex-start',
                      }}
                    >
                      <Box
                        sx={{
                          display: 'flex',
                          alignItems: 'flex-start',
                          gap: 1.5,
                          maxWidth: '80%',
                        }}
                      >
                        {message.role === 'assistant' && (
                          <Avatar
                            sx={{
                              bgcolor: 'primary.main',
                              width: 36,
                              height: 36,
                            }}
                          >
                            <SmartToyIcon fontSize="small" />
                          </Avatar>
                        )}

                        <Paper
                          sx={{
                            p: 2,
                            bgcolor:
                              message.role === 'user'
                                ? alpha(theme.palette.primary.main, 0.9)
                                : 'white',
                            color:
                              message.role === 'user'
                                ? 'white'
                                : 'text.primary',
                            borderRadius:
                              message.role === 'user'
                                ? '16px 16px 0 16px'
                                : '16px 16px 16px 0',
                            boxShadow: '0 2px 8px rgba(0,0,0,0.05)',
                          }}
                        >
                          <Typography
                            variant="body2"
                            sx={{ whiteSpace: 'pre-wrap' }}
                          >
                            {message.content}
                          </Typography>
                        </Paper>

                        {message.role === 'user' && (
                          <Avatar
                            sx={{
                              bgcolor: theme.palette.secondary.main,
                              width: 36,
                              height: 36,
                            }}
                          >
                            <PersonIcon fontSize="small" />
                          </Avatar>
                        )}
                      </Box>
                    </Box>
                  ))}
                </Box>

                <Box
                  sx={{
                    p: 2,
                    borderTop: '1px solid',
                    borderColor: 'divider',
                    display: 'flex',
                    alignItems: 'center',
                    bgcolor: 'white',
                  }}
                >
                  <TextField
                    fullWidth
                    size="small"
                    variant="outlined"
                    placeholder="Nh·∫≠p c√¢u h·ªèi c·ªßa b·∫°n..."
                    disabled
                    sx={{
                      '& .MuiOutlinedInput-root': {
                        borderRadius: 3,
                      },
                    }}
                  />
                  <IconButton
                    color="primary"
                    sx={{
                      ml: 1,
                      bgcolor: theme.palette.primary.main,
                      color: 'white',
                      '&:hover': {
                        bgcolor: theme.palette.primary.dark,
                      },
                    }}
                    onClick={handleStartChat}
                  >
                    <SendIcon />
                  </IconButton>
                </Box>
              </Paper>
            </Grid>
          </Grid>
        </Container>

        <IconButton
          sx={{
            position: 'absolute',
            bottom: 16,
            left: '50%',
            transform: 'translateX(-50%)',
            color: 'white',
            bgcolor: 'rgba(255,255,255,0.1)',
            '&:hover': {
              bgcolor: 'rgba(255,255,255,0.2)',
            },
            animation: 'bounce 2s infinite',
            '@keyframes bounce': {
              '0%, 20%, 50%, 80%, 100%': {
                transform: 'translateX(-50%) translateY(0)',
              },
              '40%': {
                transform: 'translateX(-50%) translateY(-10px)',
              },
              '60%': {
                transform: 'translateX(-50%) translateY(-5px)',
              },
            },
          }}
          onClick={scrollToFeatures}
        >
          <ScrollIcon />
        </IconButton>
      </Box>

      {/* Features Section */}
      <Container maxWidth="lg" sx={{ py: 8 }} ref={featureSectionRef}>
        <Box sx={{ textAlign: 'center', mb: 6 }}>
          <Chip label="T√≠nh nƒÉng n·ªïi b·∫≠t" color="primary" sx={{ mb: 2 }} />
          <Typography variant="h4" fontWeight="bold" sx={{ mb: 2 }}>
            H·ªçc ti·∫øng Anh hi·ªáu qu·∫£ v·ªõi AI
          </Typography>
          <Typography
            variant="body1"
            color="text.secondary"
            sx={{ maxWidth: 700, mx: 'auto' }}
          >
            EngBoost AI cung c·∫•p c√°c c√¥ng c·ª• th√¥ng minh gi√∫p b·∫°n h·ªçc ti·∫øng Anh
            nhanh ch√≥ng v√† hi·ªáu qu·∫£
          </Typography>
        </Box>

        <Grid container spacing={4} sx={{ mb: 8 }}>
          {[
            {
              icon: <TranslateIcon fontSize="large" />,
              title: 'D·ªãch thu·∫≠t th√¥ng minh',
              description:
                'D·ªãch vƒÉn b·∫£n v·ªõi ng·ªØ c·∫£nh ch√≠nh x√°c, hi·ªÉu ƒë∆∞·ª£c c√°c th√†nh ng·ªØ v√† c·ª•m t·ª´ ph·ª©c t·∫°p',
              color: '#4CAF50',
            },
            {
              icon: <SchoolIcon fontSize="large" />,
              title: 'Gi·∫£i th√≠ch ng·ªØ ph√°p',
              description:
                'Hi·ªÉu r√µ quy t·∫Øc ng·ªØ ph√°p v·ªõi v√≠ d·ª• c·ª• th·ªÉ v√† gi·∫£i th√≠ch chi ti·∫øt d·ªÖ hi·ªÉu',
              color: '#2196F3',
            },
            {
              icon: <PsychologyIcon fontSize="large" />,
              title: 'T·ª´ v·ª±ng & c√°ch d√πng',
              description:
                'H·ªçc t·ª´ v·ª±ng m·ªõi v·ªõi ƒë·ªãnh nghƒ©a, v√≠ d·ª• v√† c√°ch ph√°t √¢m chu·∫©n x√°c',
              color: '#9C27B0',
            },
            {
              icon: <PracticeIcon fontSize="large" />,
              title: 'Luy·ªán t·∫≠p h·ªôi tho·∫°i',
              description:
                'Th·ª±c h√†nh ti·∫øng Anh qua h·ªôi tho·∫°i t·ª± nhi√™n v·ªõi AI th√¥ng minh, nh·∫≠n ph·∫£n h·ªìi ngay l·∫≠p t·ª©c',
              color: '#FF9800',
            },
          ].map((feature, index) => (
            <Grid item xs={12} sm={6} md={3} key={index}>
              <Card
                elevation={0}
                sx={{
                  height: '100%',
                  borderRadius: 4,
                  p: 3,
                  transition: 'all 0.3s ease',
                  border: '1px solid',
                  borderColor: 'divider',
                  '&:hover': {
                    transform: 'translateY(-8px)',
                    boxShadow: '0 10px 30px rgba(0,0,0,0.1)',
                    borderColor: alpha(feature.color, 0.5),
                  },
                }}
              >
                <Box
                  sx={{
                    display: 'inline-flex',
                    p: 1.5,
                    borderRadius: 2,
                    mb: 2,
                    color: feature.color,
                    bgcolor: alpha(feature.color, 0.1),
                  }}
                >
                  {feature.icon}
                </Box>
                <Typography variant="h6" fontWeight="bold" sx={{ mb: 1 }}>
                  {feature.title}
                </Typography>
                <Typography variant="body2" color="text.secondary">
                  {feature.description}
                </Typography>
              </Card>
            </Grid>
          ))}
        </Grid>

        {/* Lottie Animation Section */}
        <Box sx={{ mb: 8 }}>
          <Grid container spacing={4} alignItems="center">
            <Grid item xs={12} md={6}>
              <Box sx={{ height: 400 }}>
                <Lottie
                  animationData={chatbotAnimation}
                  style={{ width: '100%', height: '100%' }}
                  options={chatbotAnimationOptions}
                />
              </Box>
            </Grid>
            <Grid item xs={12} md={6}>
              <Chip
                label="AI Conversation"
                color="primary"
                size="small"
                sx={{ mb: 2 }}
              />
              <Typography variant="h4" fontWeight="bold" sx={{ mb: 2 }}>
                Tr√≤ chuy·ªán t·ª± nhi√™n v·ªõi AI
              </Typography>
              <Typography variant="body1" color="text.secondary" sx={{ mb: 3 }}>
                EngBoost AI hi·ªÉu ƒë∆∞·ª£c ng·ªØ c·∫£nh v√† √Ω ƒë·ªãnh c·ªßa b·∫°n, t·∫°o ra c√°c
                cu·ªôc h·ªôi tho·∫°i t·ª± nhi√™n gi√∫p b·∫°n c·∫£i thi·ªán k·ªπ nƒÉng giao ti·∫øp
                ti·∫øng Anh m·ªôt c√°ch hi·ªáu qu·∫£.
              </Typography>

              <Box sx={{ mb: 3 }}>
                {[
                  'Ph·∫£n h·ªìi th√¥ng minh v√† t·ª± nhi√™n',
                  'Hi·ªÉu ƒë∆∞·ª£c ng·ªØ c·∫£nh v√† √Ω ƒë·ªãnh c·ªßa ng∆∞·ªùi d√πng',
                  'ƒêi·ªÅu ch·ªânh ƒë·ªô kh√≥ ph√π h·ª£p v·ªõi tr√¨nh ƒë·ªô',
                  'S·ª≠a l·ªói ng·ªØ ph√°p v√† ph√°t √¢m',
                ].map((item, index) => (
                  <Box
                    key={index}
                    sx={{ display: 'flex', alignItems: 'center', mb: 1 }}
                  >
                    <Box
                      component="span"
                      sx={{
                        width: 20,
                        height: 20,
                        borderRadius: '50%',
                        bgcolor: 'primary.main',
                        display: 'inline-flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        fontSize: '0.75rem',
                        color: 'white',
                        mr: 2,
                      }}
                    >
                      ‚úì
                    </Box>
                    <Typography variant="body1">{item}</Typography>
                  </Box>
                ))}
              </Box>

              <Button
                variant="contained"
                onClick={handleStartChat}
                sx={{
                  py: 1.5,
                  px: 4,
                  borderRadius: 3,
                  fontWeight: 600,
                }}
              >
                B·∫Øt ƒë·∫ßu tr√≤ chuy·ªán
              </Button>
            </Grid>
          </Grid>
        </Box>

        {/* CTA Section */}
        <Paper
          sx={{
            p: { xs: 4, md: 6 },
            textAlign: 'center',
            borderRadius: 4,
            background: `linear-gradient(135deg, ${theme.palette.primary.main} 0%, ${theme.palette.primary.dark} 100%)`,
            color: 'white',
            position: 'relative',
            overflow: 'hidden',
          }}
        >
          {/* Background pattern */}
          <Box
            sx={{
              position: 'absolute',
              top: 0,
              left: 0,
              right: 0,
              bottom: 0,
              opacity: 0.1,
              backgroundImage:
                'radial-gradient(circle, #ffffff 1px, transparent 1px)',
              backgroundSize: '20px 20px',
            }}
          />

          <Typography variant="h4" fontWeight="bold" sx={{ mb: 2 }}>
            S·∫µn s√†ng n√¢ng cao k·ªπ nƒÉng ti·∫øng Anh?
          </Typography>
          <Typography
            variant="body1"
            sx={{ mb: 4, opacity: 0.9, maxWidth: 700, mx: 'auto' }}
          >
            B·∫Øt ƒë·∫ßu tr√≤ chuy·ªán v·ªõi EngBoost AI ngay h√¥m nay v√† tr·∫£i nghi·ªám c√°ch
            h·ªçc ti·∫øng Anh hi·ªáu qu·∫£, th√∫ v·ªã v√† c√° nh√¢n h√≥a
          </Typography>
          <Button
            variant="contained"
            onClick={handleStartChat}
            size="large"
            sx={{
              py: 1.5,
              px: 4,
              borderRadius: 3,
              fontWeight: 600,
              fontSize: '1rem',
              bgcolor: 'white',
              color: 'primary.main',
              '&:hover': {
                bgcolor: 'rgba(255,255,255,0.9)',
              },
              boxShadow: '0 8px 16px rgba(0,0,0,0.1)',
            }}
          >
            B·∫Øt ƒë·∫ßu ngay
          </Button>
        </Paper>
      </Container>
      <Footer />
    </Box>
  );
};

export default ChatbotIntro;
